openapi: 3.0.0
info:
  version: '3.0'
  termsOfService: 'http://biothings.io'
  title: BioThings Explorer API
  contact:
    email: kevinxin@scripps.edu
    x-id: 'https://github.com/kevinxin90'
    x-role: responsible developer
    name: Jiwen Xin
  description: Documentation of the BioThings Explorer Web Services
servers:
  - url: 'http://biothings.io/explorer/api/v1'
    description: Production server
paths:
  '/metadata/{type}':
    get:
      summary: >-
        Return available API resources and Bioentities integarated in BioThings
        Explorer.
      parameters:
        - in: path
          required: true
          name: type
          schema:
            type: string
            enum:
              - apis
              - endpoints
              - bioentities
          description: 'Put either endpoint, bioentity, api here'
      responses:
        '200':
          description: >-
            The response includes all available resources integrated in
            BioThings Explorer related to the data type you specified, e.g. when
            you specify 'endpoints' as your input, the response will be all
            endpoints integrated in BioThings Explorer
  /knowledgemap:
    get:
      summary: >-
        Return all subject-predicate-object triples in BioThings Explorer at
        Biological ID level
      parameters:
        - in: query
          required: false
          name: endpoint
          schema:
            type: string
          description: >-
            Put endpoint name here, for the list of endpoints available, please
            refer to http://biothings.io/explorer/api/v1/metadata/endpoints. The
            results will return all associations included in this endpoint
        - in: query
          required: false
          name: predicate
          schema:
            type: string
          description: >-
            Put predicate here, e.g. hasXref, associatedWithCompound,
            associatedWithPhenotype. The results will return all associations
            which has the specified predicate
        - in: query
          required: false
          name: subject.semantic_type
          schema:
            type: string
          description: >-
            Put semmantic type for the subject here, e.g. gene, variant,
            phenotype; for a list of semantic types available, please refer to
            http://biothings.io/explorer/api/v1/metadata/bioentities. The
            results will return all associations having the specified semantic
            type as subject.
        - in: query
          required: false
          name: object.semantic_type
          schema:
            type: string
          description: >-
            Put semmantic type for the object here, e.g. gene, variant,
            phenotype; for a list of semantic types available, please refer to
            http://biothings.io/explorer/api/v1/metadata/bioentities. The
            results will return all associations having the specified semantic
            type as object.
        - in: query
          required: false
          name: subject.prefix
          schema:
            type: string
          description: >-
            Put prefix for the subject here, e.g. ncbigene, uniprot, reactome;
            for a list of prefix available, please refer to
            http://biothings.io/explorer/api/v1/metadata/bioentities. The
            results will return all associations having the specified prefix as
            subject.
        - in: query
          required: false
          name: object.prefix
          schema:
            type: string
          description: >-
            Put prefix for the object here, e.g. ncbigene, uniprot, reactome;
            for a list of prefix available, please refer to
            http://biothings.io/explorer/api/v1/metadata/bioentities. The
            results will return all associations having the specified prefix as
            object.
      responses:
        '200':
          description: >-
            List of subject-predicate-object triples together with endpoint
            information. Also each subject and object contains both semantic
            type and prefix information
  /path:
    get:
      summary: Return all potential paths connecting from input to output
      parameters:
        - in: query
          required: true
          name: start
          schema:
            type: string
          description: >-
            Put prefix you would like for the start point here, e.g. ncbigene.
            For a full list of prefix available, please refer to
            http://biothings.io/explorer/api/v1/metadata/bioentities.
        - in: query
          required: true
          name: end
          schema:
            type: string
          description: >-
            Put prefix you would like for the end point here, e.g. uniprot. For
            a full list of prefix available, please refer to
            http://biothings.io/explorer/api/v1/metadata/bioentities.
        - in: query
          required: false
          name: max_api
          schema:
            type: string
          description: >-
            Put maximum number of APIs to be used here, e.g. 3. If you would
            like to get direct connection between two biological entities, set
            this field to be 1.
      responses:
        '200':
          description: A query response object with "path" property
  /crawler:
    get:
      summary: Return all connected biological data for user-specific input
      parameters:
        - in: query
          required: true
          name: input_type
          schema:
            type: string
          description: >-
            Put prefix you would like for the input, e.g. ncbigene. For a full
            list of prefix available, please refer to
            http://biothings.io/explorer/api/v1/metadata/bioentities.
        - in: query
          required: true
          name: input_value
          schema:
            type: string
          description: >-
            Put actual value here; e.g. if you specify input_type as ncbigene,
            you could put any legit value corresponding to ncbigene such as 1017
            here.
      responses:
        '200':
          description: A query response object with "path" property
