openapi: '3.0.0'
info:
  version: '1.0'
  title: MyVariant.info API
  description: >-
    Documentation of the MyVariant.info Variant Query web services. Learn more about
    [MyVariant.info](http://myvariant.info/)
  termsOfService: http://myvariant.info/terms/
  contact:
    name: Chunlei Wu
    x-role: responsible developer
    email: help@myvariant.info
    x-id: https://github.com/newgene
servers:
  - url: 'https://myvariant.info/v1'
    description: 'Encrypted Production server'
  - url: 'http://myvariant.info/v1'
    description: 'Production server'
tags:
  - name: variant
  - name: query
  - name: metadata
  - name: translator
paths:
  /query:
    get:
      tags:
        - "query"
      summary: 'Make variant query and return matching variant list. Support JSONP and CORS as well.'
      parameters:
        - name: q
          in: "query"
          description: 'Query string. Examples "rs752396467", "possibly_damaging", "CDK7". The detailed query syntax can be found from our [docs](http://docs.myvariant.info/en/latest/doc/variant_query_service.html).'
          required: true
          example: CDK7
          schema:
            type: string
          x-valueType:
            - 'http://identifiers.org/hgnc.symbol/'
            - 'http://identifiers.org/dbsnp/'
            - 'http://identifiers.org/ensembl.gene/'
            - 'http://identifiers.org/ensembl.transcript/'
            - 'http://identifiers.org/ensembl.protein/'
            - 'http://identifiers.org/ccds/'
            - 'http://identifiers.org/uniprot/'
            - 'http://identifiers.org/clinvar/'
            - 'http://identifiers.org/omim/'
            - 'http://identifiers.org/efo/'
            - 'http://identifiers.org/orphanet/'
            - 'http://identifiers.org/hgnc/'
            - 'http://identifiers.org/pubmed/'
            - 'http://identifiers.org/refseq/'
            - 'http://identifiers.org/clinicalsignificance/'
            - 'http://biothings.io/terms/drugname/'
          x-requestTemplate:
            - valueType: 'http://identifiers.org/hgnc.symbol/'
              template: cadd.gene.genename:{{input}} OR cgi.gene:{{input}} OR clinvar.gene.symbol:{{input}} OR dbnsfp.genename:{{input}} OR dbsnp.gene.symbol:{{input}} OR docm.genename:{{input}} OR emv.gene:{{input}} OR evs.gene.symbol:{{input}} OR snpeff.ann.genename:{{input}}
            - valueType: 'http://identifiers.org/dbsnp/'
              template: clinvar.rsid:{{input}} OR dbnsfp.rsid:{{input}} OR dbsnp.rsid:{{input}} OR evs.rsid:{{input}}
            - valueType: 'http://identifiers.org/ensembl.gene/'
              template: dbnsfp.ensembl.geneid:{{input}} OR cadd.gene.gene_id:{{input}}
            - valueType: 'http://identifiers.org/ensembl.transcript'
              template: dbnsfp.ensembl.transcriptid:{{input}} OR cadd.gene.feature_id:{{input}}
            - valueType: 'http://identifiers.org/ensembl.protein/'
              template: dbnsfp.ensembl.proteinid:{{input}}
            - valueType: 'http://identifiers.org/ccds/'
              template: cadd.gene.ccds_id:{{input}}
            - valueType: 'http://identifiers.org/uniprot/'
              template: dbnsfp.uniprot.acc:{{input}}
            - valueType: 'http://identifiers.org/omim/'
              template: clinvar.omim:{{input}}
            - valueType: 'http://identifiers.org/efo/'
              template: clinvar.rcv.conditions.identifiers.efo:{{input}}
            - valueType: 'http://identifiers.org/orphanet/'
              template: clinvar.rcv.conditions.identifiers.orphanet:{{input}}
            - valueType: 'http://identifiers.org/hgnc/'
              template: clinvar.gene.id:{{input}} OR dbsnp.gene.geneid:{{input}}
            - valueType: 'http://identifiers.org/pubmed/'
              template: civic.evidence_items.source.pubmed_id:{{input}} OR docm.pubmed_id:{{input}} OR gwassnps.pubmed:{{input}}
            - valueType: 'http://identifiers.org/clinicalsignificance/'
              template: clinvar.rcv.clinical_significance:{{input}}
            - valueType: 'http://biothings.io/terms/drugname/'
              template: civic.evidence_items.drugs.name:{{input}}
        - name: fields
          in: "query"
          $ref: '#/components/parameters/fields'
        - name: size
          in: "query"
          $ref: '#/components/parameters/size'
        - name: from
          in: "query"
          $ref: '#/components/parameters/from'
        - name: sort
          in: "query"
          $ref: '#/components/parameters/sort'
        - name: facets
          in: "query"
          description: 'a single field or comma-separated fields to return facets, for example, "facets=clinvar.gene.id", "facets=clinvar.gene.id,dbnsfp.uniprot.acc".'
          schema:
            type: string
        - name: callback
          in: "query"
          $ref: '#/components/parameters/callback'
        - name: dotfield
          in: "query"
          $ref: '#/components/parameters/dotfield'
        - name: email
          in: "query"
          $ref: '#/components/parameters/email'
      responses:
        '200':
          description: 'A query response object with "hits" property'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          x-responseValueType:
            - path: hits._id
              valueType: 'http://identifiers.org/hgvs/'
          x-JSONLDContext:
            'https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/myvariant.info/jsonld_context/myvariant_query_1.1.json'
        '400':
          description: 'A response indicating an improperly formatted query'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
    post:
      tags:
        - "query"
      summary: 'Make variant batch query and return matching variant hits'
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
             properties:
                q:
                  description: >-
                    multiple query terms seperated by comma (also support "+" or white space), but no wildcard, e.g., "q=rs58991260,rs2500" or "q=rs58991260+rs2500"
                  type: string
                scopes:
                  description: 'Specify one or more fields (separated by comma) as the search "scopes", e.g., "scopes=dbsnp.rsid". The available "fields" that can be passed to "scopes" parameter are listed [here](http://docs.myvariant.info/en/latest/doc/data.html#available-fields). Default: "scopes=_id" (HGVS id).'
                  type: string
             required:
               - q
      parameters:
        - name: fields
          in: "query"
          $ref: '#/components/parameters/fields'
        - name: dotfield
          in: "query"
          $ref: '#/components/parameters/dotfield'
        - name: email
          in: "query"
          $ref: '#/components/parameters/email'
      responses:
        '200':
          description: 'Query response objects with "hits" property'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPOSTResult'
          x-responseValueType:
            - path: hits._id
              valueType: 'http://identifiers.org/hgvs/'
          x-JSONLDContext:
            'https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/myvariant.info/jsonld_context/myvariant_query_1.1.json'
        '400':
          description: 'A response indicating an improperly formatted query'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
  '/variant/{variantid}':
    get:
      tags:
        - "variant"
      summary: 'Retrieve variant annotation object based on HGVS or rsid, support JSONP and CORS as well.'
      parameters:
        - name: variantid
          in: path
          description: >-
            HGVS or rsid, e.g., chr6:g.152708291G>A, rs12190874
          required: true
          example: 'chr6:g.152708291G>A'
          x-valueType:
            - 'http://identifiers.org/hgvs/'
            - 'http://identifiers.org/dbsnp/'
          x-requestTemplate:
            - valueType: 'http://identifiers.org/hgvs/'
              template: /variant/{{input}}
            - valueType: 'http://identifiers.org/dbsnp/'
              template: /variant/{{input}}
          schema:
            type: string
        - name: fields
          in: "query"
          $ref: '#/components/parameters/fields'
        - name: dotfield
          in: "query"
          $ref: '#/components/parameters/dotfield'
        - name: callback
          in: "query"
          $ref: '#/components/parameters/callback'
        - name: email
          in: "query"
          $ref: '#/components/parameters/email'
      responses:
        '200':
          description: 'A matching variant object'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variant'
          x-responseValueType:
            - path: _id
              valueType: 'http://identifiers.org/hgvs/'
          x-JSONLDContext:
            'https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/myvariant.info/jsonld_context/myvariant_variant_1.1.json'
        '404':
          description: 'A response indicating an unknown variant id'
  '/variant':
    post:
      tags:
        - "variant"
      summary: 'For a list of variant ids, return the matching variant objects'
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
             properties:
                ids:
                  description: 'multiple variant ids seperated by comma, e.g., "ids=chr6:g.152708291G>A,chr1:g.35367G>A" or "ids=rs5882,rs12190874". Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted.'
                  type: string
             required:
               - ids
      parameters:
        - name: fields
          in: "query"
          $ref: '#/components/parameters/fields'
        - name: dotfield
          in: "query"
          $ref: '#/components/parameters/dotfield'
        - name: email
          in: "query"
          $ref: '#/components/parameters/email'
      responses:
        '200':
          description: 'a list of matching variant objects'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Variant'
          x-responseValueType:
            - path: _id
              valueType: 'http://identifiers.org/hgvs/'
          x-JSONLDContext:
            'https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/myvariant.info/jsonld_context/myvariant_variant_1.1.json'
  '/metadata':
    get:
      tags:
        - "metadata"
      summary: 'Get metadata about the data available from MyVariant.info.'
      parameters:
        - name: callback
          in: "query"
          $ref: '#/components/parameters/callback'
      responses:
        '200':
          description: 'MyVariant.info metadata object'
  '/metadata/fields':
    get:
      tags:
        - "metadata"
      summary: 'Get metadata about the data fields available from MyVariant.info.'
      parameters:
        - name: search
          in: "query"
          description: 'Pass a search term to filter the available fields, e.g. "search=clinvar".'
          schema:
            type: string
        - name: prefix
          in: "query"
          description: 'Pass a prefix string to filter the available fields, e.g. "prefix=refseq".'
          schema:
            type: string
        - name: callback
          in: "query"
          $ref: '#/components/parameters/callback'
      responses:
        '200':
          description: 'MyVariant.info metadata fields object'
components:
  parameters:
    fields:
      name: fields
      in: "query"
      description:
        'a comma-separated fields to limit the fields returned from the matching variant hits. The supported field names can be found from any variant object (e.g. http://myvariant.info/v1/variant/rs12190874). Note that it supports dot notation as well, e.g., you can pass "dbsnp.rsid". If "fields=all", all available fields will be returned. Default: "all".'
      schema:
        type: string
    size:
      name: size
      in: "query"
      description:
          'the maximum number of matching variant hits to return (with a cap of 1000 at the moment). Default: 10.'
      schema:
        type: integer
    from:
      name: from
      in: "query"
      description:
          'the number of matching variant hits to skip, starting from 0. Combining with "size" parameter, this can be useful for paging. Default: 0.'
      schema:
        type: integer
    sort:
      name: sort
      in: "query"
      description:
          'the comma-separated fields to sort on. Prefix with "-" for descending order, otherwise in ascending order. Default: sort by matching scores in decending order.'
      schema:
        type: string
    dotfield:
      name: dotfield
      in: "query"
      description: 'control the format of the returned variant object. If "true" or "1", all fields will be collapsed into a single level deep structure (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Default: false.'
      schema:
        type: boolean
    callback:
      name: callback
      in: "query"
      description: 'you can pass a "callback" parameter to make a JSONP call.'
      schema:
        type: string
    email:
      name: email
      in: "query"
      description:
          'If you are regular users of our services, we encourage you to provide us an email, so that we can better track the usage or follow up with you.'
      schema:
        type: string
  schemas:
    string_or_array:
      oneOf:
        - type: array
          items:
            type: string
        - type: string
    int64_or_array:
      oneOf:
        - type: array
          items:
            type: integer
            format: int64
        - type: integer
          format: int64
    QueryResult:
      type: object
      properties:
        max_score:
          type: number
          format: float
        took:
          type: integer
        total:
          type: integer
        hits:
          type: array
          items:
            $ref: '#/components/schemas/Variant'
    QueryPOSTResult:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Variant'
          - type: object
            properties:
              _score:
                type: number
                format: float
              query:
                type: string
    ErrorResult:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
    Variant:
      type: object
      required:
        - _id
      properties:
        _id:
          type: string
